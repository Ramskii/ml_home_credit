library(readr)
sample_submission <- read_csv("C:/Users/abenes/Documents/Modèle de banque et scoring/sample_submission.csv")
View(sample_submission)
library(readr)
previous_application <- read_csv("C:/Users/abenes/Documents/Modèle de banque et scoring/previous_application.csv")
View(previous_application)
library(readr)
installments_payments <- read_csv("C:/Users/abenes/Documents/Modèle de banque et scoring/installments_payments.csv")
View(installments_payments)
library(readr)
credit_card_balance <- read_csv("C:/Users/abenes/Documents/Modèle de banque et scoring/credit_card_balance.csv")
View(credit_card_balance)
library(readr)
bureau_balance <- read_csv("C:/Users/abenes/Documents/Modèle de banque et scoring/bureau_balance.csv")
View(bureau_balance)
library(readr)
bureau_balance <- read_csv("C:/Users/abenes/Documents/Modèle de banque et scoring/bureau_balance.csv")
View(bureau_balance)
library(readr)
bureau <- read_csv("C:/Users/abenes/Documents/Modèle de banque et scoring/bureau.csv")
View(bureau)
save.image("C:/Users/abenes/Desktop/modele banque.RData")
#Lecture des fichiers
application_train <- read_csv("application_train.csv")
shiny::runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Machine_Learning_banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Machine_Learning_banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Machine_Learning_banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Machine_Learning_banque')
library(readr)
setwd("C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_ML_banque")
#Lecture des fichiers
application_train <- read_csv("application_train.csv")
application_test <- read_csv("application_test.csv")
install.packages('dplyr')
library(dplyr)
#Mise en forme de l'age en année et postive
application_train$YEARS_BIRTH<- application_train$DAYS_BIRTH/-365
application_train$YEARS_ID_PUBLISH<- application_train$DAYS_ID_PUBLISH/-365
application_test$YEARS_BIRTH<- application_test$DAYS_BIRTH/-365
application_test$YEARS_ID_PUBLISH<- application_test$DAYS_ID_PUBLISH/-365
application_train= application_train %>% select(-DAYS_BIRTH,-DAYS_ID_PUBLISH)
application_test= application_test %>% select(-DAYS_BIRTH,-DAYS_ID_PUBLISH)
#???CONCATENATION DES DEUX TABLES
full <- bind_rows(application_train,application_test)
#Récupération de la target
Target <- application_train$TARGET
#Suppresion de L'ID dans l'application test
Id <- application_test$SK_ID_CURR
#Suppresion des deux dans la table ful
full[,c('SK_ID_CURR','TARGET')] <- NULL
#Séparation des variables quantitative et char
chr <- full[,sapply(full, is.character)]
num <- full[,sapply(full, is.numeric)]
chr[is.na(chr)] <- "Not Available"
fac <- chr %>%
lapply(as.factor) %>%
as_data_frame()
#Dans la table full on garde que les variables fac et num
full <- bind_cols(fac, num)
rm(chr, fac, num)
full[is.na(full)] <- 0
#On crée la base de train qui va jusqu'a la longeur des target
train <- full[1:length(Target),]
test <- full[(length(Target)+1):nrow(full),]
library(caret)
set.seed(123)
inTrain <- createDataPartition(Target, p=.9, list = F)
tr <- train[inTrain,]
va <- train[-inTrain,]
#dimension
print(dim(tr))
print(dim(va))
tr_ta <- Target[inTrain]
va_ta <- Target[-inTrain]
library(lightgbm)
#mise en forme des tables pour le Label
lgb.train = lgb.Dataset(data.matrix(tr), label = tr_ta)
lgb.valid = lgb.Dataset(data.matrix(va), label = va_ta)
params.lgb = list(
objective = "binary"
, metric = "auc"
, min_data_in_leaf = 1
, min_sum_hessian_in_leaf = 100
, feature_fraction = 1
, bagging_fraction = 1
, bagging_freq = 0
)
# Get the time to train the lightGBM model
lgb.model <- lgb.train(
params = params.lgb
, data = lgb.train
, valids = list(val = lgb.valid)
, learning_rate = 0.05
, num_leaves = 7
, num_threads = 2
, nrounds = 3000
, early_stopping_rounds = 200
, eval_freq = 50
)
tree_imp <- lgb.importance(lgb.model, percentage = TRUE) %>% head(20)
lgb.plot.importance(tree_imp, measure = "Gain")
#on garde que ces 20 varibles
#???CONCATENATION DES DEUX TABLES
full2 <- bind_rows(application_train,application_test)
#Récupération de la target
Target <- application_train$TARGET
#Suppresion de L'ID dans l'application test
Id <- application_test$SK_ID_CURR
Id_train <- application_train$SK_ID_CURR
#Suppresion des deux dans la table full2
full2[,c('SK_ID_CURR','TARGET')] <- NULL
#Séparation des variables quantitative et char
chr <- full2[,sapply(full, is.character)]
num <- full2[,sapply(full, is.numeric)]
chr[is.na(chr)] <- "Not Available"
fac <- chr %>%
lapply(as.factor) %>%
as_data_frame()
#Dans la table full on garde que les variables fac et num
full2 <- bind_cols(fac, num)
full2[is.na(full)] <- 0
full2_format <- full2[,c(tree_imp$Feature)]
#On crée la base de train qui va jusqu'a la longeur des target
train <- full2_format[1:length(Target),]
test <- full2_format[(length(Target)+1):nrow(full),]
#On crée la base de train qui va jusqu'a la longeur des target
ID_VF=rbind(Id,Id_train)
train_target =cbind(Id_train,Target,full2_format[1:length(Target),])
inapp <- createDataPartition(Target, p=.01, list = F)
#on enrengistre le fichier pour notre appli shinny
base_model <- train_target[inapp,]
#Save the test data. We will upload this to the shiny app to get predictions
write.csv(base_model, 'test_data.csv', row.names = FALSE)
base_model2= base_model %>% select(-Target,-Id_train)
#Save the test data. We will upload this to the shiny app to get predictions
write.csv(base_model2, 'test_data2.csv', row.names = FALSE)
set.seed(123)
inTrain <- createDataPartition(Target, p=.9, list = F)
tr <- train[inTrain,]
va <- train[-inTrain,]
#dimension
print(dim(tr))
print(dim(va))
tr_ta <- Target[inTrain]
va_ta <- Target[-inTrain]
#mise en forme des tables pour le Label
lgb.train = lgb.Dataset(data.matrix(tr), label = tr_ta)
lgb.valid = lgb.Dataset(data.matrix(va), label = va_ta)
params.lgb = list(
objective = "binary"
, metric = "auc"
, min_data_in_leaf = 1
, min_sum_hessian_in_leaf = 100
, feature_fraction = 1
, bagging_fraction = 1
, bagging_freq = 0
)
# Get the time to train the lightGBM model
lgb.model2 <- lgb.train(
params = params.lgb
, data = lgb.train
, valids = list(val = lgb.valid)
, learning_rate = 0.05
, num_leaves = 7
, num_threads = 2
, nrounds = 3000
, early_stopping_rounds = 200
, eval_freq = 50
)
tree_imp_mod2 <- lgb.importance(lgb.model2, percentage = TRUE) %>% head(5)
lgb.plot.importance(tree_imp_mod2, measure = "Gain")
# make test predictions sur notre model qu'on va tester en server
lgb_pred <- predict(lgb.model2, data = data.matrix(base_model2), n = lgb.model$best_iter)
#Prediction "response"
pred.target = factor(ifelse(lgb_pred >
0.5, 1, 0))
va_base <- cbind(base_model,lgb_pred, pred.target)
# Matrice de confusion
(m.confusion <- as.matrix(table(va_base$pred.target, va_base$Target)))
m.confusion
matrice2=data.frame(m.confusion)
colnames(matrice2) <- c("Predition","Realite","Nb")
m.confusion <- unclass(m.confusion)
save(lgb.model2 , file = 'lgb.rda')
shiny::runApp()
runApp('C:/Users/abenes/Documents/YNOV M2/shinny/devoir shinny 2')
runApp('C:/Users/abenes/Documents/YNOV M2/shinny/devoir shinny 2')
runApp('C:/Users/abenes/Documents/YNOV M2/shinny/tp8')
runApp('C:/Users/abenes/Documents/YNOV M2/shinny/tp8')
runApp('C:/Users/abenes/Documents/YNOV M2/shinny/tp8')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque')
runApp('C:/Users/abenes/Documents/YNOV M2/Modele_de_banque_et_scoring/R_Shiny_Dashboard_Banque_vf')
